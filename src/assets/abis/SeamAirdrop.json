{
  "address": "0x4d235d6bb6E8f93449541dfdDb1F2a6408A379D4",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IERC20",
            "name": "_seam",
            "type": "address"
          },
          {
            "internalType": "contract IEscrowSeam",
            "name": "_escrowSeam",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_vestingPercentage",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "_merkleRoot",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "name": "AddressEmptyCode",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "AddressInsufficientBalance",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "AlreadyClaimed",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "FailedInnerCall",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidProof",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "InvalidVestingPercentage",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MathOverflowedMulDiv",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "OwnableInvalidOwner",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "OwnableUnauthorizedAccount",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          }
        ],
        "name": "SafeERC20FailedOperation",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "seamAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "esSeamAmount",
            "type": "uint256"
          }
        ],
        "name": "Claim",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "merkleRoot",
            "type": "bytes32"
          }
        ],
        "name": "MerkleRootSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "vestingPercentage",
            "type": "uint256"
          }
        ],
        "name": "VestingPercentageSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "Withdraw",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "MAX_VESTING_PERCENTAGE",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "bytes32[]",
            "name": "merkleProof",
            "type": "bytes32[]"
          }
        ],
        "name": "claim",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "escrowSeam",
        "outputs": [
          {
            "internalType": "contract IEscrowSeam",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "hasClaimed",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "merkleRoot",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "seam",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "_merkleRoot",
            "type": "bytes32"
          }
        ],
        "name": "setMerkleRoot",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_vestingPercentage",
            "type": "uint256"
          }
        ],
        "name": "setVestingPercentage",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "vestingPercentage",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IERC20",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": {
      "object": "0x60a060405234801561001057600080fd5b50604051610d5a380380610d5a83398101604081905261002f91610129565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610067816100c1565b5061271083111561008b576040516329a8bc8760e11b815260040160405180910390fd5b506001600160a01b03938416608052600180546001600160a01b031916939094169290921790925560029190915560035561018b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461012657600080fd5b50565b600080600080600060a0868803121561014157600080fd5b855161014c81610111565b602087015190955061015d81610111565b809450506040860151925060608601519150608086015161017d81610111565b809150509295509295909350565b608051610ba76101b36000396000818160e50152818161030601526103f50152610ba76000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80637cb647591161007c5780637cb647591461016d5780638da5cb5b14610180578063aed0675214610191578063ba634921146101a4578063d9caed12146101b7578063e225c95d146101ca578063f2fde38b146101d357600080fd5b8063106f3bbb146100c457806321e42985146100e05780632eb4a7ab146101145780633d13f8741461011d578063715018a61461013257806373b2e80e1461013a575b600080fd5b6100cd60025481565b6040519081526020015b60405180910390f35b6101077f000000000000000000000000000000000000000000000000000000000000000081565b6040516100d7919061096d565b6100cd60035481565b61013061012b366004610996565b6101e6565b005b610130610489565b61015d610148366004610a22565b60046020526000908152604090205460ff1681565b60405190151581526020016100d7565b61013061017b366004610a3f565b61049d565b6000546001600160a01b0316610107565b600154610107906001600160a01b031681565b6101306101b2366004610a3f565b6104e1565b6101306101c5366004610a58565b610541565b6100cd61271081565b6101306101e1366004610a22565b6105a6565b6001600160a01b03841660009081526004602052604090205460ff161561022b5783604051632058b6db60e01b8152600401610222919061096d565b60405180910390fd5b6102a8828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003546040516bffffffffffffffffffffffff1960608b901b166020820152603481018990529092506054019050604051602081830303815290604052805190602001206105e4565b6102c5576040516309bde33960e01b815260040160405180910390fd5b60006102d6846002546127106105fc565b905060006102e48286610aaf565b905081156103ea5760015460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b3926103419291909116908690600401610ac2565b6020604051808303816000875af1158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610adb565b506001546040516311f9fbc960e21b81526001600160a01b03909116906347e7ef24906103b79089908690600401610ac2565b600060405180830381600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b505050505b801561041b5761041b7f000000000000000000000000000000000000000000000000000000000000000087836106c0565b6001600160a01b03861660008181526004602052604090819020805460ff19166001179055517f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7906104799084908690918252602082015260400190565b60405180910390a2505050505050565b61049161071d565b61049b600061074a565b565b6104a561071d565b60038190556040518181527f42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b906020015b60405180910390a150565b6104e961071d565b61271081111561050c576040516329a8bc8760e11b815260040160405180910390fd5b60028190556040518181527ffcd7dbb612accea2cf2cb3fb63c17f90a49da90158ebfd4d0adfeb6e8c0b483b906020016104d6565b61054961071d565b6105548383836106c0565b816001600160a01b0316836001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161059991815260200190565b60405180910390a3505050565b6105ae61071d565b6001600160a01b0381166105d8576000604051631e4fbdf760e01b8152600401610222919061096d565b6105e18161074a565b50565b6000826105f1858461079a565b1490505b9392505050565b60008383028160001985870982811083820303915050806000036106335783828161062957610629610afd565b04925050506105f5565b8084116106535760405163227bc15360e01b815260040160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b61071883846001600160a01b031663a9059cbb85856040516024016106e6929190610ac2565b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506107e9565b505050565b6000546001600160a01b0316331461049b573360405163118cdaa760e01b8152600401610222919061096d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156107df576107cb828683815181106107be576107be610b13565b6020026020010151610843565b9150806107d781610b29565b91505061079f565b5090505b92915050565b60006107fe6001600160a01b0384168361086f565b905080516000141580156108235750808060200190518101906108219190610adb565b155b156107185782604051635274afe760e01b8152600401610222919061096d565b600081831061085f5760008281526020849052604090206105f5565b5060009182526020526040902090565b60606105f58383600084600080856001600160a01b031684866040516108959190610b42565b60006040518083038185875af1925050503d80600081146108d2576040519150601f19603f3d011682016040523d82523d6000602084013e6108d7565b606091505b50915091506108e78683836108f1565b9695505050505050565b6060826109065761090182610944565b6105f5565b815115801561091d57506001600160a01b0384163b155b1561093d5783604051639996b31560e01b8152600401610222919061096d565b50806105f5565b8051156109545780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b0391909116815260200190565b6001600160a01b03811681146105e157600080fd5b600080600080606085870312156109ac57600080fd5b84356109b781610981565b935060208501359250604085013567ffffffffffffffff808211156109db57600080fd5b818701915087601f8301126109ef57600080fd5b8135818111156109fe57600080fd5b8860208260051b8501011115610a1357600080fd5b95989497505060200194505050565b600060208284031215610a3457600080fd5b81356105f581610981565b600060208284031215610a5157600080fd5b5035919050565b600080600060608486031215610a6d57600080fd5b8335610a7881610981565b92506020840135610a8881610981565b929592945050506040919091013590565b634e487b7160e01b600052601160045260246000fd5b818103818111156107e3576107e3610a99565b6001600160a01b03929092168252602082015260400190565b600060208284031215610aed57600080fd5b815180151581146105f557600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610b3b57610b3b610a99565b5060010190565b6000825160005b81811015610b635760208186018101518583015201610b49565b50600092019182525091905056fea2646970667358221220368a65993856192172b9bd31e753bc94d627fae43f2c4d99f34f85f8da9ce57264736f6c63430008140033",
      "sourceMap": "693:2378:101:-:0;;;1028:406;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1160:6;-1:-1:-1;;;;;1273:26:43;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:43;;1350:1;1322:31;;;1013:51:129;986:18;;1322:31:43;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;827:6:101::1;1186:18;:43;1182:107;;;1252:26;;-1:-1:-1::0;;;1252:26:101::1;;;;;;;;;;;1182:107;-1:-1:-1::0;;;;;;1299:12:101;;::::1;;::::0;1321:10:::1;:24:::0;;-1:-1:-1;;;;;;1321:24:101::1;::::0;;;::::1;::::0;;;::::1;::::0;;;1355:17:::1;:38:::0;;;;1403:10:::1;:24:::0;693:2378;;2912:187:43;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:43;;;-1:-1:-1;;;;;;3020:17:43;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:139:129:-;-1:-1:-1;;;;;97:31:129;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:704::-;301:6;309;317;325;333;386:3;374:9;365:7;361:23;357:33;354:53;;;403:1;400;393:12;354:53;435:9;429:16;454:39;487:5;454:39;:::i;:::-;562:2;547:18;;541:25;512:5;;-1:-1:-1;575:41:129;541:25;575:41;:::i;:::-;635:7;625:17;;;682:2;671:9;667:18;661:25;651:35;;726:2;715:9;711:18;705:25;695:35;;775:3;764:9;760:19;754:26;789:41;822:7;789:41;:::i;:::-;849:7;839:17;;;158:704;;;;;;;;:::o;867:203::-;693:2378:101;;;;;;;;;;;;;;;;;;;;;;",
      "linkReferences": {}
    },
    "deployedBytecode": {
      "object": "0x608060405234801561001057600080fd5b50600436106100bf5760003560e01c80637cb647591161007c5780637cb647591461016d5780638da5cb5b14610180578063aed0675214610191578063ba634921146101a4578063d9caed12146101b7578063e225c95d146101ca578063f2fde38b146101d357600080fd5b8063106f3bbb146100c457806321e42985146100e05780632eb4a7ab146101145780633d13f8741461011d578063715018a61461013257806373b2e80e1461013a575b600080fd5b6100cd60025481565b6040519081526020015b60405180910390f35b6101077f000000000000000000000000000000000000000000000000000000000000000081565b6040516100d7919061096d565b6100cd60035481565b61013061012b366004610996565b6101e6565b005b610130610489565b61015d610148366004610a22565b60046020526000908152604090205460ff1681565b60405190151581526020016100d7565b61013061017b366004610a3f565b61049d565b6000546001600160a01b0316610107565b600154610107906001600160a01b031681565b6101306101b2366004610a3f565b6104e1565b6101306101c5366004610a58565b610541565b6100cd61271081565b6101306101e1366004610a22565b6105a6565b6001600160a01b03841660009081526004602052604090205460ff161561022b5783604051632058b6db60e01b8152600401610222919061096d565b60405180910390fd5b6102a8828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506003546040516bffffffffffffffffffffffff1960608b901b166020820152603481018990529092506054019050604051602081830303815290604052805190602001206105e4565b6102c5576040516309bde33960e01b815260040160405180910390fd5b60006102d6846002546127106105fc565b905060006102e48286610aaf565b905081156103ea5760015460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b3926103419291909116908690600401610ac2565b6020604051808303816000875af1158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610adb565b506001546040516311f9fbc960e21b81526001600160a01b03909116906347e7ef24906103b79089908690600401610ac2565b600060405180830381600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b505050505b801561041b5761041b7f000000000000000000000000000000000000000000000000000000000000000087836106c0565b6001600160a01b03861660008181526004602052604090819020805460ff19166001179055517f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7906104799084908690918252602082015260400190565b60405180910390a2505050505050565b61049161071d565b61049b600061074a565b565b6104a561071d565b60038190556040518181527f42cbc405e4dbf1b691e85b9a34b08ecfcf7a9ad9078bf4d645ccfa1fac11c10b906020015b60405180910390a150565b6104e961071d565b61271081111561050c576040516329a8bc8760e11b815260040160405180910390fd5b60028190556040518181527ffcd7dbb612accea2cf2cb3fb63c17f90a49da90158ebfd4d0adfeb6e8c0b483b906020016104d6565b61054961071d565b6105548383836106c0565b816001600160a01b0316836001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161059991815260200190565b60405180910390a3505050565b6105ae61071d565b6001600160a01b0381166105d8576000604051631e4fbdf760e01b8152600401610222919061096d565b6105e18161074a565b50565b6000826105f1858461079a565b1490505b9392505050565b60008383028160001985870982811083820303915050806000036106335783828161062957610629610afd565b04925050506105f5565b8084116106535760405163227bc15360e01b815260040160405180910390fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b61071883846001600160a01b031663a9059cbb85856040516024016106e6929190610ac2565b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506107e9565b505050565b6000546001600160a01b0316331461049b573360405163118cdaa760e01b8152600401610222919061096d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b84518110156107df576107cb828683815181106107be576107be610b13565b6020026020010151610843565b9150806107d781610b29565b91505061079f565b5090505b92915050565b60006107fe6001600160a01b0384168361086f565b905080516000141580156108235750808060200190518101906108219190610adb565b155b156107185782604051635274afe760e01b8152600401610222919061096d565b600081831061085f5760008281526020849052604090206105f5565b5060009182526020526040902090565b60606105f58383600084600080856001600160a01b031684866040516108959190610b42565b60006040518083038185875af1925050503d80600081146108d2576040519150601f19603f3d011682016040523d82523d6000602084013e6108d7565b606091505b50915091506108e78683836108f1565b9695505050505050565b6060826109065761090182610944565b6105f5565b815115801561091d57506001600160a01b0384163b155b1561093d5783604051639996b31560e01b8152600401610222919061096d565b50806105f5565b8051156109545780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b0391909116815260200190565b6001600160a01b03811681146105e157600080fd5b600080600080606085870312156109ac57600080fd5b84356109b781610981565b935060208501359250604085013567ffffffffffffffff808211156109db57600080fd5b818701915087601f8301126109ef57600080fd5b8135818111156109fe57600080fd5b8860208260051b8501011115610a1357600080fd5b95989497505060200194505050565b600060208284031215610a3457600080fd5b81356105f581610981565b600060208284031215610a5157600080fd5b5035919050565b600080600060608486031215610a6d57600080fd5b8335610a7881610981565b92506020840135610a8881610981565b929592945050506040919091013590565b634e487b7160e01b600052601160045260246000fd5b818103818111156107e3576107e3610a99565b6001600160a01b03929092168252602082015260400190565b600060208284031215610aed57600080fd5b815180151581146105f557600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610b3b57610b3b610a99565b5060010190565b6000825160005b81811015610b635760208186018101518583015201610b49565b50600092019182525091905056fea2646970667358221220368a65993856192172b9bd31e753bc94d627fae43f2c4d99f34f85f8da9ce57264736f6c63430008140033",
      "sourceMap": "693:2378:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:32;;;;;;;;;160:25:129;;;148:2;133:18;909:32:101;;;;;;;;875:28;;;;;;;;;;;;:::i;947:25::-;;;;;;2000:854;;;;;;:::i;:::-;;:::i;:::-;;2293:101:43;;;:::i;979:42:101:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1978:14:129;;1971:22;1953:41;;1941:2;1926:18;979:42:101;1813:187:129;1473:145:101;;;;;;:::i;:::-;;:::i;1638:85:43:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:43;1638:85;;840:29:101;;;;;-1:-1:-1;;;;;840:29:101;;;1657:304;;;;;;:::i;:::-;;:::i;2860:209::-;;;;;;:::i;:::-;;:::i;778:55::-;;827:6;778:55;;2543:215:43;;;;;;:::i;:::-;;:::i;2000:854:101:-;-1:-1:-1;;;;;2105:21:101;;;;;;:10;:21;;;;;;;;2101:84;;;2164:9;2149:25;;-1:-1:-1;;;2149:25:101;;;;;;;;:::i;:::-;;;;;;;;2101:84;2199:91;2218:11;;2199:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2231:10:101;;2253:35;;-1:-1:-1;;3466:2:129;3462:15;;;3458:53;2253:35:101;;;3446:66:129;3528:12;;;3521:28;;;2231:10:101;;-1:-1:-1;3565:12:129;;;-1:-1:-1;2253:35:101;;;;;;;;;;;;2243:46;;;;;;2199:18;:91::i;:::-;2194:144;;2313:14;;-1:-1:-1;;;2313:14:101;;;;;;;;;;;2194:144;2348:20;2371:62;2383:6;2391:17;;827:6;2371:11;:62::i;:::-;2348:85;-1:-1:-1;2443:18:101;2464:21;2348:85;2464:6;:21;:::i;:::-;2443:42;-1:-1:-1;2500:16:101;;2496:151;;2553:10;;2532:47;;-1:-1:-1;;;2532:47:101;;-1:-1:-1;;;;;2532:4:101;:12;;;;;:47;;2553:10;;;;;2566:12;;2532:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2593:10:101;;:43;;-1:-1:-1;;;2593:43:101;;-1:-1:-1;;;;;2593:10:101;;;;:18;;:43;;2612:9;;2623:12;;2593:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:151;2660:14;;2656:96;;2690:51;2713:4;2719:9;2730:10;2690:22;:51::i;:::-;-1:-1:-1;;;;;2762:21:101;;;;;;:10;:21;;;;;;;:28;;-1:-1:-1;;2762:28:101;2786:4;2762:28;;;2805:42;;;;;2822:10;;2834:12;;4588:25:129;;;4644:2;4629:18;;4622:34;4576:2;4561:18;;4414:248;2805:42:101;;;;;;;;2091:763;;2000:854;;;;:::o;2293:101:43:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1473:145:101:-;1531:13:43;:11;:13::i;:::-;1546:10:101::1;:24:::0;;;1585:26:::1;::::0;160:25:129;;;1585:26:101::1;::::0;148:2:129;133:18;1585:26:101::1;;;;;;;;1473:145:::0;:::o;1657:304::-;1531:13:43;:11;:13::i;:::-;827:6:101::1;1748:18;:43;1744:107;;;1814:26;;-1:-1:-1::0;;;1814:26:101::1;;;;;;;;;;;1744:107;1861:17;:38:::0;;;1914:40:::1;::::0;160:25:129;;;1914:40:101::1;::::0;148:2:129;133:18;1914:40:101::1;14:177:129::0;2860:209:101;1531:13:43;:11;:13::i;:::-;2956:48:101::1;2979:5;2986:9;2997:6;2956:22;:48::i;:::-;3044:9;-1:-1:-1::0;;;;;3019:43:101::1;3036:5;-1:-1:-1::0;;;;;3019:43:101::1;;3055:6;3019:43;;;;160:25:129::0;;148:2;133:18;;14:177;3019:43:101::1;;;;;;;;2860:209:::0;;;:::o;2543:215:43:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:43;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:43::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1265:154:79:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;1372:40;;1265:154;;;;;;:::o;3803:4116:84:-;3885:14;4248:5;;;3885:14;-1:-1:-1;;4252:1:84;4248;4420:20;4493:5;4489:2;4486:13;4478:5;4474:2;4470:14;4466:34;4457:43;;;4595:5;4604:1;4595:10;4591:368;;4933:11;4925:5;:19;;;;;:::i;:::-;;4918:26;;;;;;4591:368;5080:5;5065:11;:20;5061:88;;5112:22;;-1:-1:-1;;;5112:22:84;;;;;;;;;;;5061:88;5404:17;5539:11;5536:1;5533;5526:25;5939:12;5969:15;;;5954:31;;6088:22;;;;;6813:1;6794;:15;;6793:21;;7046;;;7042:25;;7031:36;7115:21;;;7111:25;;7100:36;7185:21;;;7181:25;;7170:36;7255:21;;;7251:25;;7240:36;7325:21;;;7321:25;;7310:36;7396:21;;;7392:25;;;7381:36;6333:12;;;;6329:23;;;6354:1;6325:31;5653:20;;;5642:32;;;6445:12;;;;5700:21;;;;6186:16;;;;6436:21;;;;7860:15;;;;;-1:-1:-1;;3803:4116:84;;;;;:::o;1303:160:68:-;1385:71;1405:5;1427;-1:-1:-1;;;;;1427:14:68;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:68;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:43:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:43;735:10:72;1855:23:43;1851:101;;735:10:72;1901:40:43;;-1:-1:-1;;;1901:40:43;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:43;;;-1:-1:-1;;;;;;3020:17:43;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1967:290:79:-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:79;;;;:::i;:::-;;;;2106:116;;;-1:-1:-1;2238:12:79;-1:-1:-1;1967:290:79;;;;;:::o;4059:629:68:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:68;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;-1:-1:-1;;;4631:40:68;;;;;;;;:::i;9229:147:79:-;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;-1:-1:-1;9564:13:79;9655:15;;;9690:4;9683:15;9736:4;9720:21;;;9229:147::o;2705:151:71:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:71;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:71:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:71;;;:23;5045:49;5041:119;;;5138:6;5121:24;;-1:-1:-1;;;5121:24:71;;;;;;;;:::i;5041:119::-;-1:-1:-1;5180:10:71;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:71;;;;;;;;;;;196:219:129;-1:-1:-1;;;;;376:32:129;;;;358:51;;346:2;331:18;;196:219::o;602:131::-;-1:-1:-1;;;;;677:31:129;;667:42;;657:70;;723:1;720;713:12;738:818;842:6;850;858;866;919:2;907:9;898:7;894:23;890:32;887:52;;;935:1;932;925:12;887:52;974:9;961:23;993:31;1018:5;993:31;:::i;:::-;1043:5;-1:-1:-1;1095:2:129;1080:18;;1067:32;;-1:-1:-1;1150:2:129;1135:18;;1122:32;1173:18;1203:14;;;1200:34;;;1230:1;1227;1220:12;1200:34;1268:6;1257:9;1253:22;1243:32;;1313:7;1306:4;1302:2;1298:13;1294:27;1284:55;;1335:1;1332;1325:12;1284:55;1375:2;1362:16;1401:2;1393:6;1390:14;1387:34;;;1417:1;1414;1407:12;1387:34;1470:7;1465:2;1455:6;1452:1;1448:14;1444:2;1440:23;1436:32;1433:45;1430:65;;;1491:1;1488;1481:12;1430:65;738:818;;;;-1:-1:-1;;1522:2:129;1514:11;;-1:-1:-1;;;738:818:129:o;1561:247::-;1620:6;1673:2;1661:9;1652:7;1648:23;1644:32;1641:52;;;1689:1;1686;1679:12;1641:52;1728:9;1715:23;1747:31;1772:5;1747:31;:::i;2005:180::-;2064:6;2117:2;2105:9;2096:7;2092:23;2088:32;2085:52;;;2133:1;2130;2123:12;2085:52;-1:-1:-1;2156:23:129;;2005:180;-1:-1:-1;2005:180:129:o;2812:472::-;2905:6;2913;2921;2974:2;2962:9;2953:7;2949:23;2945:32;2942:52;;;2990:1;2987;2980:12;2942:52;3029:9;3016:23;3048:31;3073:5;3048:31;:::i;:::-;3098:5;-1:-1:-1;3155:2:129;3140:18;;3127:32;3168:33;3127:32;3168:33;:::i;:::-;2812:472;;3220:7;;-1:-1:-1;;;3274:2:129;3259:18;;;;3246:32;;2812:472::o;3588:127::-;3649:10;3644:3;3640:20;3637:1;3630:31;3680:4;3677:1;3670:15;3704:4;3701:1;3694:15;3720:128;3787:9;;;3808:11;;;3805:37;;;3822:18;;:::i;3853:274::-;-1:-1:-1;;;;;4045:32:129;;;;4027:51;;4109:2;4094:18;;4087:34;4015:2;4000:18;;3853:274::o;4132:277::-;4199:6;4252:2;4240:9;4231:7;4227:23;4223:32;4220:52;;;4268:1;4265;4258:12;4220:52;4300:9;4294:16;4353:5;4346:13;4339:21;4332:5;4329:32;4319:60;;4375:1;4372;4365:12;4667:127;4728:10;4723:3;4719:20;4716:1;4709:31;4759:4;4756:1;4749:15;4783:4;4780:1;4773:15;4799:127;4860:10;4855:3;4851:20;4848:1;4841:31;4891:4;4888:1;4881:15;4915:4;4912:1;4905:15;4931:135;4970:3;4991:17;;;4988:43;;5011:18;;:::i;:::-;-1:-1:-1;5058:1:129;5047:13;;4931:135::o;5071:412::-;5200:3;5238:6;5232:13;5263:1;5273:129;5287:6;5284:1;5281:13;5273:129;;;5385:4;5369:14;;;5365:25;;5359:32;5346:11;;;5339:53;5302:12;5273:129;;;-1:-1:-1;5457:1:129;5421:16;;5446:13;;;-1:-1:-1;5421:16:129;5071:412;-1:-1:-1;5071:412:129:o",
      "linkReferences": {},
      "immutableReferences": {
        "65866": [
          {
            "start": 229,
            "length": 32
          },
          {
            "start": 774,
            "length": 32
          },
          {
            "start": 1013,
            "length": 32
          }
        ]
      }
    },
    "methodIdentifiers": {
      "MAX_VESTING_PERCENTAGE()": "e225c95d",
      "claim(address,uint256,bytes32[])": "3d13f874",
      "escrowSeam()": "aed06752",
      "hasClaimed(address)": "73b2e80e",
      "merkleRoot()": "2eb4a7ab",
      "owner()": "8da5cb5b",
      "renounceOwnership()": "715018a6",
      "seam()": "21e42985",
      "setMerkleRoot(bytes32)": "7cb64759",
      "setVestingPercentage(uint256)": "ba634921",
      "transferOwnership(address)": "f2fde38b",
      "vestingPercentage()": "106f3bbb",
      "withdraw(address,address,uint256)": "d9caed12"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_seam\",\"type\":\"address\"},{\"internalType\":\"contract IEscrowSeam\",\"name\":\"_escrowSeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_vestingPercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVestingPercentage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seamAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"esSeamAmount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingPercentage\",\"type\":\"uint256\"}],\"name\":\"VestingPercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VESTING_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowSeam\",\"outputs\":[{\"internalType\":\"contract IEscrowSeam\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seam\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vestingPercentage\",\"type\":\"uint256\"}],\"name\":\"setVestingPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"New contract should be deployed for each airdrop\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,bytes32[])\":{\"details\":\"If proof is invalid or recipient already claimed tokens, reverts, otherwise tokens are sent to the recipient\",\"params\":{\"amount\":\"Amount of tokens to claim\",\"merkleProof\":\"Merkle proof\",\"recipient\":\"Address to claim tokens for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMerkleRoot(bytes32)\":{\"params\":{\"_merkleRoot\":\"New merkle root\"}},\"setVestingPercentage(uint256)\":{\"details\":\"Sets what percentage of total air-dropped SEAM tokens should be vested\",\"params\":{\"vestingPercentage\":\"Vesting percentage\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,address,uint256)\":{\"details\":\"This function should be used only by the owner\",\"params\":{\"amount\":\"Amount of tokens to withdraw\",\"recipient\":\"Address to withdraw tokens to\",\"token\":\"Address of the token to withdraw\"}}},\"title\":\"Seam Airdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address,uint256,bytes32[])\":{\"notice\":\"Claims tokens for the recipient\"},\"setMerkleRoot(bytes32)\":{\"notice\":\"Changes merkle root\"},\"setVestingPercentage(uint256)\":{\"notice\":\"Sets the vesting percentage\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Withdraws tokens from the contract\"}},\"notice\":\"Airdrop contract that transfers SEAM tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SeamAirdrop.sol\":\"SeamAirdrop\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"src/SeamAirdrop.sol\":{\"keccak256\":\"0x25510512265bd864e5d9a59d1b2f267b08e445b70f7a3bad2b98edf2c036d82e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d0c46e18bef65e912c2645b195c347fcf8ba4c336ec09770cd4af6056cddd87b\",\"dweb:/ipfs/QmcZ63cGbT7CXDfLcy54J54vJXRj9gmZ5Sg2x7dX19AgMT\"]},\"src/interfaces/IEscrowSeam.sol\":{\"keccak256\":\"0x51bc0feb1536be7797acaa651798d9b5bbcbb81f29c4ae2999b14bfad228d6df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://60fffe8fd1ea22dfef146cd2493696f588a6fe804da13ecf2fb33fa201fc92d1\",\"dweb:/ipfs/QmTgPj7vEwx65qFooxNegWsQpcDvWhuTM13Uo317HXiPs4\"]},\"src/interfaces/ISeamAirdrop.sol\":{\"keccak256\":\"0x21ffe87cc916c8666172d5e0ce8662848d67bf3267cda5e155ba31cdeafc9729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ae578d0a897631c28e63345d8dd6637eb17f0d5f0bf85446a7fc834e288e687\",\"dweb:/ipfs/QmXhZFMw45ELiBC9HjizdAMcNWZw9AaV2LmvpGrbrhA9g1\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.20+commit.a1b79de6"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract IERC20",
                "name": "_seam",
                "type": "address"
              },
              {
                "internalType": "contract IEscrowSeam",
                "name": "_escrowSeam",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_vestingPercentage",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "_merkleRoot",
                "type": "bytes32"
              },
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "AddressEmptyCode"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "AddressInsufficientBalance"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "AlreadyClaimed"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "FailedInnerCall"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidProof"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidVestingPercentage"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "MathOverflowedMulDiv"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "OwnableInvalidOwner"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "OwnableUnauthorizedAccount"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "SafeERC20FailedOperation"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "seamAmount",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "uint256",
                "name": "esSeamAmount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "Claim",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "merkleRoot",
                "type": "bytes32",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "MerkleRootSet",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "previousOwner",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address",
                "indexed": true
              }
            ],
            "type": "event",
            "name": "OwnershipTransferred",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "vestingPercentage",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "VestingPercentageSet",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "Withdraw",
            "anonymous": false
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "MAX_VESTING_PERCENTAGE",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "bytes32[]",
                "name": "merkleProof",
                "type": "bytes32[]"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "claim"
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "escrowSeam",
            "outputs": [
              {
                "internalType": "contract IEscrowSeam",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "hasClaimed",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "merkleRoot",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "renounceOwnership"
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "seam",
            "outputs": [
              {
                "internalType": "contract IERC20",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_merkleRoot",
                "type": "bytes32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "setMerkleRoot"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_vestingPercentage",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "setVestingPercentage"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "transferOwnership"
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "vestingPercentage",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "contract IERC20",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "withdraw"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "claim(address,uint256,bytes32[])": {
              "details": "If proof is invalid or recipient already claimed tokens, reverts, otherwise tokens are sent to the recipient",
              "params": {
                "amount": "Amount of tokens to claim",
                "merkleProof": "Merkle proof",
                "recipient": "Address to claim tokens for"
              }
            },
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
            },
            "setMerkleRoot(bytes32)": {
              "params": {
                "_merkleRoot": "New merkle root"
              }
            },
            "setVestingPercentage(uint256)": {
              "details": "Sets what percentage of total air-dropped SEAM tokens should be vested",
              "params": {
                "vestingPercentage": "Vesting percentage"
              }
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            },
            "withdraw(address,address,uint256)": {
              "details": "This function should be used only by the owner",
              "params": {
                "amount": "Amount of tokens to withdraw",
                "recipient": "Address to withdraw tokens to",
                "token": "Address of the token to withdraw"
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "claim(address,uint256,bytes32[])": {
              "notice": "Claims tokens for the recipient"
            },
            "setMerkleRoot(bytes32)": {
              "notice": "Changes merkle root"
            },
            "setVestingPercentage(uint256)": {
              "notice": "Sets the vesting percentage"
            },
            "withdraw(address,address,uint256)": {
              "notice": "Withdraws tokens from the contract"
            }
          },
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
          "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 100
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/SeamAirdrop.sol": "SeamAirdrop"
        },
        "libraries": {}
      },
      "sources": {
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
          "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
          "urls": [
            "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
            "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
          "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
          "urls": [
            "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
            "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
          "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
          "urls": [
            "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
            "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
          "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
          "urls": [
            "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
            "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
          "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
          "urls": [
            "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
            "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
          "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
          "urls": [
            "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
            "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
          "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
          "urls": [
            "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
            "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
          "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
          "urls": [
            "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
            "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
          ],
          "license": "MIT"
        },
        "src/SeamAirdrop.sol": {
          "keccak256": "0x25510512265bd864e5d9a59d1b2f267b08e445b70f7a3bad2b98edf2c036d82e",
          "urls": [
            "bzz-raw://d0c46e18bef65e912c2645b195c347fcf8ba4c336ec09770cd4af6056cddd87b",
            "dweb:/ipfs/QmcZ63cGbT7CXDfLcy54J54vJXRj9gmZ5Sg2x7dX19AgMT"
          ],
          "license": "UNLICENSED"
        },
        "src/interfaces/IEscrowSeam.sol": {
          "keccak256": "0x51bc0feb1536be7797acaa651798d9b5bbcbb81f29c4ae2999b14bfad228d6df",
          "urls": [
            "bzz-raw://60fffe8fd1ea22dfef146cd2493696f588a6fe804da13ecf2fb33fa201fc92d1",
            "dweb:/ipfs/QmTgPj7vEwx65qFooxNegWsQpcDvWhuTM13Uo317HXiPs4"
          ],
          "license": "UNLICENSED"
        },
        "src/interfaces/ISeamAirdrop.sol": {
          "keccak256": "0x21ffe87cc916c8666172d5e0ce8662848d67bf3267cda5e155ba31cdeafc9729",
          "urls": [
            "bzz-raw://9ae578d0a897631c28e63345d8dd6637eb17f0d5f0bf85446a7fc834e288e687",
            "dweb:/ipfs/QmXhZFMw45ELiBC9HjizdAMcNWZw9AaV2LmvpGrbrhA9g1"
          ],
          "license": "UNLICENSED"
        }
      },
      "version": 1
    },
    "ast": {
      "absolutePath": "src/SeamAirdrop.sol",
      "id": 66092,
      "exportedSymbols": {
        "IERC20": [
          55694
        ],
        "IEscrowSeam": [
          67594
        ],
        "ISeamAirdrop": [
          67698
        ],
        "Math": [
          59547
        ],
        "MerkleProof": [
          58282
        ],
        "Ownable": [
          51979
        ],
        "SafeERC20": [
          56200
        ],
        "SeamAirdrop": [
          66091
        ]
      },
      "nodeType": "SourceUnit",
      "src": "39:3033:101",
      "nodes": [
        {
          "id": 65834,
          "nodeType": "PragmaDirective",
          "src": "39:24:101",
          "nodes": [],
          "literals": [
            "solidity",
            "^",
            "0.8",
            ".20"
          ]
        },
        {
          "id": 65836,
          "nodeType": "ImportDirective",
          "src": "65:69:101",
          "nodes": [],
          "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
          "file": "openzeppelin-contracts/token/ERC20/IERC20.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 55695,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65835,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 55694,
                "src": "73:6:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65838,
          "nodeType": "ImportDirective",
          "src": "135:66:101",
          "nodes": [],
          "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
          "file": "openzeppelin-contracts/access/Ownable.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 51980,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65837,
                "name": "Ownable",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 51979,
                "src": "143:7:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65840,
          "nodeType": "ImportDirective",
          "src": "202:86:101",
          "nodes": [],
          "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
          "file": "openzeppelin-contracts/utils/cryptography/MerkleProof.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 58283,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65839,
                "name": "MerkleProof",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 58282,
                "src": "210:11:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65842,
          "nodeType": "ImportDirective",
          "src": "289:81:101",
          "nodes": [],
          "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 56201,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65841,
                "name": "SafeERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 56200,
                "src": "297:9:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65844,
          "nodeType": "ImportDirective",
          "src": "371:59:101",
          "nodes": [],
          "absolutePath": "src/interfaces/ISeamAirdrop.sol",
          "file": "./interfaces/ISeamAirdrop.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 67699,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65843,
                "name": "ISeamAirdrop",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 67698,
                "src": "379:12:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65846,
          "nodeType": "ImportDirective",
          "src": "431:57:101",
          "nodes": [],
          "absolutePath": "src/interfaces/IEscrowSeam.sol",
          "file": "./interfaces/IEscrowSeam.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 67595,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65845,
                "name": "IEscrowSeam",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 67594,
                "src": "439:11:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 65848,
          "nodeType": "ImportDirective",
          "src": "489:64:101",
          "nodes": [],
          "absolutePath": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
          "file": "openzeppelin-contracts/utils/math/Math.sol",
          "nameLocation": "-1:-1:-1",
          "scope": 66092,
          "sourceUnit": 59548,
          "symbolAliases": [
            {
              "foreign": {
                "id": 65847,
                "name": "Math",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 59547,
                "src": "497:4:101",
                "typeDescriptions": {}
              },
              "nameLocation": "-1:-1:-1"
            }
          ],
          "unitAlias": ""
        },
        {
          "id": 66091,
          "nodeType": "ContractDefinition",
          "src": "693:2378:101",
          "nodes": [
            {
              "id": 65857,
              "nodeType": "UsingForDirective",
              "src": "745:27:101",
              "nodes": [],
              "global": false,
              "libraryName": {
                "id": 65854,
                "name": "SafeERC20",
                "nameLocations": [
                  "751:9:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 56200,
                "src": "751:9:101"
              },
              "typeName": {
                "id": 65856,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65855,
                  "name": "IERC20",
                  "nameLocations": [
                    "765:6:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55694,
                  "src": "765:6:101"
                },
                "referencedDeclaration": 55694,
                "src": "765:6:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$55694",
                  "typeString": "contract IERC20"
                }
              }
            },
            {
              "id": 65860,
              "nodeType": "VariableDeclaration",
              "src": "778:55:101",
              "nodes": [],
              "constant": true,
              "functionSelector": "e225c95d",
              "mutability": "constant",
              "name": "MAX_VESTING_PERCENTAGE",
              "nameLocation": "802:22:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 65858,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "778:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3130305f3030",
                "id": 65859,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "827:6:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "100_00"
              },
              "visibility": "public"
            },
            {
              "id": 65863,
              "nodeType": "VariableDeclaration",
              "src": "840:29:101",
              "nodes": [],
              "constant": false,
              "functionSelector": "aed06752",
              "mutability": "mutable",
              "name": "escrowSeam",
              "nameLocation": "859:10:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                "typeString": "contract IEscrowSeam"
              },
              "typeName": {
                "id": 65862,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65861,
                  "name": "IEscrowSeam",
                  "nameLocations": [
                    "840:11:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67594,
                  "src": "840:11:101"
                },
                "referencedDeclaration": 67594,
                "src": "840:11:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                  "typeString": "contract IEscrowSeam"
                }
              },
              "visibility": "public"
            },
            {
              "id": 65866,
              "nodeType": "VariableDeclaration",
              "src": "875:28:101",
              "nodes": [],
              "constant": false,
              "functionSelector": "21e42985",
              "mutability": "immutable",
              "name": "seam",
              "nameLocation": "899:4:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$55694",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 65865,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 65864,
                  "name": "IERC20",
                  "nameLocations": [
                    "875:6:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55694,
                  "src": "875:6:101"
                },
                "referencedDeclaration": 55694,
                "src": "875:6:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$55694",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "public"
            },
            {
              "id": 65868,
              "nodeType": "VariableDeclaration",
              "src": "909:32:101",
              "nodes": [],
              "constant": false,
              "functionSelector": "106f3bbb",
              "mutability": "mutable",
              "name": "vestingPercentage",
              "nameLocation": "924:17:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 65867,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "909:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "id": 65870,
              "nodeType": "VariableDeclaration",
              "src": "947:25:101",
              "nodes": [],
              "constant": false,
              "functionSelector": "2eb4a7ab",
              "mutability": "mutable",
              "name": "merkleRoot",
              "nameLocation": "962:10:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              },
              "typeName": {
                "id": 65869,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "947:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "visibility": "public"
            },
            {
              "id": 65874,
              "nodeType": "VariableDeclaration",
              "src": "979:42:101",
              "nodes": [],
              "constant": false,
              "functionSelector": "73b2e80e",
              "mutability": "mutable",
              "name": "hasClaimed",
              "nameLocation": "1011:10:101",
              "scope": 66091,
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "typeName": {
                "id": 65873,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 65871,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "987:7:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "979:24:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 65872,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "998:4:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "id": 65917,
              "nodeType": "FunctionDefinition",
              "src": "1028:406:101",
              "nodes": [],
              "body": {
                "id": 65916,
                "nodeType": "Block",
                "src": "1172:262:101",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 65894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65892,
                        "name": "_vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65882,
                        "src": "1186:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 65893,
                        "name": "MAX_VESTING_PERCENTAGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65860,
                        "src": "1207:22:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1186:43:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 65899,
                    "nodeType": "IfStatement",
                    "src": "1182:107:101",
                    "trueBody": {
                      "id": 65898,
                      "nodeType": "Block",
                      "src": "1231:58:101",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 65895,
                              "name": "InvalidVestingPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67633,
                              "src": "1252:24:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 65896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1252:26:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 65897,
                          "nodeType": "RevertStatement",
                          "src": "1245:33:101"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 65902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65900,
                        "name": "seam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65866,
                        "src": "1299:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55694",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65901,
                        "name": "_seam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65877,
                        "src": "1306:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$55694",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1299:12:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$55694",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 65903,
                    "nodeType": "ExpressionStatement",
                    "src": "1299:12:101"
                  },
                  {
                    "expression": {
                      "id": 65906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65904,
                        "name": "escrowSeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65863,
                        "src": "1321:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                          "typeString": "contract IEscrowSeam"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65905,
                        "name": "_escrowSeam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65880,
                        "src": "1334:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                          "typeString": "contract IEscrowSeam"
                        }
                      },
                      "src": "1321:24:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                        "typeString": "contract IEscrowSeam"
                      }
                    },
                    "id": 65907,
                    "nodeType": "ExpressionStatement",
                    "src": "1321:24:101"
                  },
                  {
                    "expression": {
                      "id": 65910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65908,
                        "name": "vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65868,
                        "src": "1355:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65909,
                        "name": "_vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65882,
                        "src": "1375:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1355:38:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65911,
                    "nodeType": "ExpressionStatement",
                    "src": "1355:38:101"
                  },
                  {
                    "expression": {
                      "id": 65914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65912,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65870,
                        "src": "1403:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65913,
                        "name": "_merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65884,
                        "src": "1416:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "1403:24:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 65915,
                    "nodeType": "ExpressionStatement",
                    "src": "1403:24:101"
                  }
                ]
              },
              "implemented": true,
              "kind": "constructor",
              "modifiers": [
                {
                  "arguments": [
                    {
                      "id": 65889,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65886,
                      "src": "1160:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  ],
                  "id": 65890,
                  "kind": "baseConstructorSpecifier",
                  "modifierName": {
                    "id": 65888,
                    "name": "Ownable",
                    "nameLocations": [
                      "1152:7:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 51979,
                    "src": "1152:7:101"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1152:15:101"
                }
              ],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "parameters": {
                "id": 65887,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 65877,
                    "mutability": "mutable",
                    "name": "_seam",
                    "nameLocation": "1047:5:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65917,
                    "src": "1040:12:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$55694",
                      "typeString": "contract IERC20"
                    },
                    "typeName": {
                      "id": 65876,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 65875,
                        "name": "IERC20",
                        "nameLocations": [
                          "1040:6:101"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55694,
                        "src": "1040:6:101"
                      },
                      "referencedDeclaration": 55694,
                      "src": "1040:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$55694",
                        "typeString": "contract IERC20"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65880,
                    "mutability": "mutable",
                    "name": "_escrowSeam",
                    "nameLocation": "1066:11:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65917,
                    "src": "1054:23:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                      "typeString": "contract IEscrowSeam"
                    },
                    "typeName": {
                      "id": 65879,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 65878,
                        "name": "IEscrowSeam",
                        "nameLocations": [
                          "1054:11:101"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 67594,
                        "src": "1054:11:101"
                      },
                      "referencedDeclaration": 67594,
                      "src": "1054:11:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                        "typeString": "contract IEscrowSeam"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65882,
                    "mutability": "mutable",
                    "name": "_vestingPercentage",
                    "nameLocation": "1087:18:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65917,
                    "src": "1079:26:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 65881,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1079:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65884,
                    "mutability": "mutable",
                    "name": "_merkleRoot",
                    "nameLocation": "1115:11:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65917,
                    "src": "1107:19:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 65883,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1107:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65886,
                    "mutability": "mutable",
                    "name": "_owner",
                    "nameLocation": "1136:6:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65917,
                    "src": "1128:14:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 65885,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1128:7:101",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1039:104:101"
              },
              "returnParameters": {
                "id": 65891,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1172:0:101"
              },
              "scope": 66091,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "id": 65934,
              "nodeType": "FunctionDefinition",
              "src": "1473:145:101",
              "nodes": [],
              "body": {
                "id": 65933,
                "nodeType": "Block",
                "src": "1536:82:101",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "id": 65927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65925,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65870,
                        "src": "1546:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65926,
                        "name": "_merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65920,
                        "src": "1559:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "1546:24:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 65928,
                    "nodeType": "ExpressionStatement",
                    "src": "1546:24:101"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 65930,
                          "name": "_merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65920,
                          "src": "1599:11:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 65929,
                        "name": "MerkleRootSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67647,
                        "src": "1585:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 65931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1585:26:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65932,
                    "nodeType": "EmitStatement",
                    "src": "1580:31:101"
                  }
                ]
              },
              "baseFunctions": [
                67675
              ],
              "documentation": {
                "id": 65918,
                "nodeType": "StructuredDocumentation",
                "src": "1440:28:101",
                "text": "@inheritdoc ISeamAirdrop"
              },
              "functionSelector": "7cb64759",
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 65923,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 65922,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "1526:9:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 51890,
                    "src": "1526:9:101"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1526:9:101"
                }
              ],
              "name": "setMerkleRoot",
              "nameLocation": "1482:13:101",
              "parameters": {
                "id": 65921,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 65920,
                    "mutability": "mutable",
                    "name": "_merkleRoot",
                    "nameLocation": "1504:11:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65934,
                    "src": "1496:19:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 65919,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1496:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1495:21:101"
              },
              "returnParameters": {
                "id": 65924,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1536:0:101"
              },
              "scope": 66091,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "id": 65959,
              "nodeType": "FunctionDefinition",
              "src": "1657:304:101",
              "nodes": [],
              "body": {
                "id": 65958,
                "nodeType": "Block",
                "src": "1734:227:101",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 65944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65942,
                        "name": "_vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65937,
                        "src": "1748:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 65943,
                        "name": "MAX_VESTING_PERCENTAGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65860,
                        "src": "1769:22:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1748:43:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 65949,
                    "nodeType": "IfStatement",
                    "src": "1744:107:101",
                    "trueBody": {
                      "id": 65948,
                      "nodeType": "Block",
                      "src": "1793:58:101",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 65945,
                              "name": "InvalidVestingPercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67633,
                              "src": "1814:24:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 65946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1814:26:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 65947,
                          "nodeType": "RevertStatement",
                          "src": "1807:33:101"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 65952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65950,
                        "name": "vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65868,
                        "src": "1861:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 65951,
                        "name": "_vestingPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65937,
                        "src": "1881:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1861:38:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65953,
                    "nodeType": "ExpressionStatement",
                    "src": "1861:38:101"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 65955,
                          "name": "_vestingPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65937,
                          "src": "1935:18:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 65954,
                        "name": "VestingPercentageSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67643,
                        "src": "1914:20:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 65956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1914:40:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 65957,
                    "nodeType": "EmitStatement",
                    "src": "1909:45:101"
                  }
                ]
              },
              "baseFunctions": [
                67669
              ],
              "documentation": {
                "id": 65935,
                "nodeType": "StructuredDocumentation",
                "src": "1624:28:101",
                "text": "@inheritdoc ISeamAirdrop"
              },
              "functionSelector": "ba634921",
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 65940,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 65939,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "1724:9:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 51890,
                    "src": "1724:9:101"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "1724:9:101"
                }
              ],
              "name": "setVestingPercentage",
              "nameLocation": "1666:20:101",
              "parameters": {
                "id": 65938,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 65937,
                    "mutability": "mutable",
                    "name": "_vestingPercentage",
                    "nameLocation": "1695:18:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 65959,
                    "src": "1687:26:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 65936,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1687:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1686:28:101"
              },
              "returnParameters": {
                "id": 65941,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1734:0:101"
              },
              "scope": 66091,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "id": 66060,
              "nodeType": "FunctionDefinition",
              "src": "2000:854:101",
              "nodes": [],
              "body": {
                "id": 66059,
                "nodeType": "Block",
                "src": "2091:763:101",
                "nodes": [],
                "statements": [
                  {
                    "condition": {
                      "baseExpression": {
                        "id": 65970,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65874,
                        "src": "2105:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 65972,
                      "indexExpression": {
                        "id": 65971,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65962,
                        "src": "2116:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2105:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 65978,
                    "nodeType": "IfStatement",
                    "src": "2101:84:101",
                    "trueBody": {
                      "id": 65977,
                      "nodeType": "Block",
                      "src": "2128:57:101",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 65974,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65962,
                                "src": "2164:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 65973,
                              "name": "AlreadyClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67637,
                              "src": "2149:14:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 65975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2149:25:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 65976,
                          "nodeType": "RevertStatement",
                          "src": "2142:32:101"
                        }
                      ]
                    }
                  },
                  {
                    "condition": {
                      "id": 65991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2198:92:101",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 65981,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65967,
                            "src": "2218:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 65982,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65870,
                            "src": "2231:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 65986,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65962,
                                    "src": "2270:9:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 65987,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65964,
                                    "src": "2281:6:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 65984,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2253:3:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 65985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2257:12:101",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2253:16:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 65988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2253:35:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 65983,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2243:9:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 65989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2243:46:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 65979,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58282,
                            "src": "2199:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$58282_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 65980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2211:6:101",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57772,
                          "src": "2199:18:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 65990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:91:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 65996,
                    "nodeType": "IfStatement",
                    "src": "2194:144:101",
                    "trueBody": {
                      "id": 65995,
                      "nodeType": "Block",
                      "src": "2292:46:101",
                      "statements": [
                        {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 65992,
                              "name": "InvalidProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67639,
                              "src": "2313:12:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 65993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2313:14:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 65994,
                          "nodeType": "RevertStatement",
                          "src": "2306:21:101"
                        }
                      ]
                    }
                  },
                  {
                    "assignments": [
                      65998
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 65998,
                        "mutability": "mutable",
                        "name": "esSeamAmount",
                        "nameLocation": "2356:12:101",
                        "nodeType": "VariableDeclaration",
                        "scope": 66059,
                        "src": "2348:20:101",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 65997,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2348:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 66005,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 66001,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65964,
                          "src": "2383:6:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 66002,
                          "name": "vestingPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65868,
                          "src": "2391:17:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 66003,
                          "name": "MAX_VESTING_PERCENTAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65860,
                          "src": "2410:22:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 65999,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59547,
                          "src": "2371:4:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$59547_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 66000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2376:6:101",
                        "memberName": "mulDiv",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58881,
                        "src": "2371:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 66004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2371:62:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2348:85:101"
                  },
                  {
                    "assignments": [
                      66007
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 66007,
                        "mutability": "mutable",
                        "name": "seamAmount",
                        "nameLocation": "2451:10:101",
                        "nodeType": "VariableDeclaration",
                        "scope": 66059,
                        "src": "2443:18:101",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 66006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2443:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 66011,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66008,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65964,
                        "src": "2464:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 66009,
                        "name": "esSeamAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65998,
                        "src": "2473:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2464:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2443:42:101"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66012,
                        "name": "esSeamAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65998,
                        "src": "2500:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 66013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2515:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2500:16:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 66033,
                    "nodeType": "IfStatement",
                    "src": "2496:151:101",
                    "trueBody": {
                      "id": 66032,
                      "nodeType": "Block",
                      "src": "2518:129:101",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 66020,
                                    "name": "escrowSeam",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65863,
                                    "src": "2553:10:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                                      "typeString": "contract IEscrowSeam"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                                      "typeString": "contract IEscrowSeam"
                                    }
                                  ],
                                  "id": 66019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2545:7:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 66018,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2545:7:101",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 66021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2545:19:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 66022,
                                "name": "esSeamAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65998,
                                "src": "2566:12:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 66015,
                                "name": "seam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65866,
                                "src": "2532:4:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$55694",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 66017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2537:7:101",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55681,
                              "src": "2532:12:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 66023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2532:47:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 66024,
                          "nodeType": "ExpressionStatement",
                          "src": "2532:47:101"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 66028,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65962,
                                "src": "2612:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 66029,
                                "name": "esSeamAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65998,
                                "src": "2623:12:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 66025,
                                "name": "escrowSeam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65863,
                                "src": "2593:10:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IEscrowSeam_$67594",
                                  "typeString": "contract IEscrowSeam"
                                }
                              },
                              "id": 66027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2604:7:101",
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67588,
                              "src": "2593:18:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 66030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2593:43:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 66031,
                          "nodeType": "ExpressionStatement",
                          "src": "2593:43:101"
                        }
                      ]
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66034,
                        "name": "seamAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66007,
                        "src": "2660:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 66035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2673:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2660:14:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 66046,
                    "nodeType": "IfStatement",
                    "src": "2656:96:101",
                    "trueBody": {
                      "id": 66045,
                      "nodeType": "Block",
                      "src": "2676:76:101",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 66040,
                                "name": "seam",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65866,
                                "src": "2713:4:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$55694",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 66041,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65962,
                                "src": "2719:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 66042,
                                "name": "seamAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66007,
                                "src": "2730:10:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$55694",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 66037,
                                "name": "SafeERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56200,
                                "src": "2690:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeERC20_$56200_$",
                                  "typeString": "type(library SafeERC20)"
                                }
                              },
                              "id": 66039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2700:12:101",
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55960,
                              "src": "2690:22:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$55694_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (contract IERC20,address,uint256)"
                              }
                            },
                            "id": 66043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2690:51:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 66044,
                          "nodeType": "ExpressionStatement",
                          "src": "2690:51:101"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 66051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 66047,
                          "name": "hasClaimed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65874,
                          "src": "2762:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 66049,
                        "indexExpression": {
                          "id": 66048,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65962,
                          "src": "2773:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2762:21:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 66050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2786:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "2762:28:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 66052,
                    "nodeType": "ExpressionStatement",
                    "src": "2762:28:101"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "id": 66054,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65962,
                          "src": "2811:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 66055,
                          "name": "seamAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66007,
                          "src": "2822:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 66056,
                          "name": "esSeamAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65998,
                          "src": "2834:12:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 66053,
                        "name": "Claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67655,
                        "src": "2805:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256)"
                        }
                      },
                      "id": 66057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2805:42:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66058,
                    "nodeType": "EmitStatement",
                    "src": "2800:47:101"
                  }
                ]
              },
              "baseFunctions": [
                67686
              ],
              "documentation": {
                "id": 65960,
                "nodeType": "StructuredDocumentation",
                "src": "1967:28:101",
                "text": "@inheritdoc ISeamAirdrop"
              },
              "functionSelector": "3d13f874",
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "claim",
              "nameLocation": "2009:5:101",
              "parameters": {
                "id": 65968,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 65962,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "2023:9:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66060,
                    "src": "2015:17:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 65961,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2015:7:101",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65964,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2042:6:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66060,
                    "src": "2034:14:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 65963,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2034:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65967,
                    "mutability": "mutable",
                    "name": "merkleProof",
                    "nameLocation": "2069:11:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66060,
                    "src": "2050:30:101",
                    "stateVariable": false,
                    "storageLocation": "calldata",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 65965,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2050:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 65966,
                      "nodeType": "ArrayTypeName",
                      "src": "2050:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2014:67:101"
              },
              "returnParameters": {
                "id": 65969,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2091:0:101"
              },
              "scope": 66091,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "id": 66090,
              "nodeType": "FunctionDefinition",
              "src": "2860:209:101",
              "nodes": [],
              "body": {
                "id": 66089,
                "nodeType": "Block",
                "src": "2946:123:101",
                "nodes": [],
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "id": 66075,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66063,
                          "src": "2979:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$55694",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 66076,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66065,
                          "src": "2986:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 66077,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66067,
                          "src": "2997:6:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$55694",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 66072,
                          "name": "SafeERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56200,
                          "src": "2956:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeERC20_$56200_$",
                            "typeString": "type(library SafeERC20)"
                          }
                        },
                        "id": 66074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2966:12:101",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55960,
                        "src": "2956:22:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$55694_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 66078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2956:48:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66079,
                    "nodeType": "ExpressionStatement",
                    "src": "2956:48:101"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 66083,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66063,
                              "src": "3036:5:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$55694",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$55694",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 66082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3028:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66081,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3028:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3028:14:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 66085,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66065,
                          "src": "3044:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 66086,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66067,
                          "src": "3055:6:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 66080,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67663,
                        "src": "3019:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 66087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3019:43:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66088,
                    "nodeType": "EmitStatement",
                    "src": "3014:48:101"
                  }
                ]
              },
              "baseFunctions": [
                67697
              ],
              "functionSelector": "d9caed12",
              "implemented": true,
              "kind": "function",
              "modifiers": [
                {
                  "id": 66070,
                  "kind": "modifierInvocation",
                  "modifierName": {
                    "id": 66069,
                    "name": "onlyOwner",
                    "nameLocations": [
                      "2936:9:101"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 51890,
                    "src": "2936:9:101"
                  },
                  "nodeType": "ModifierInvocation",
                  "src": "2936:9:101"
                }
              ],
              "name": "withdraw",
              "nameLocation": "2869:8:101",
              "parameters": {
                "id": 66068,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 66063,
                    "mutability": "mutable",
                    "name": "token",
                    "nameLocation": "2885:5:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66090,
                    "src": "2878:12:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$55694",
                      "typeString": "contract IERC20"
                    },
                    "typeName": {
                      "id": 66062,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 66061,
                        "name": "IERC20",
                        "nameLocations": [
                          "2878:6:101"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55694,
                        "src": "2878:6:101"
                      },
                      "referencedDeclaration": 55694,
                      "src": "2878:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$55694",
                        "typeString": "contract IERC20"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 66065,
                    "mutability": "mutable",
                    "name": "recipient",
                    "nameLocation": "2900:9:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66090,
                    "src": "2892:17:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 66064,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2892:7:101",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 66067,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "2919:6:101",
                    "nodeType": "VariableDeclaration",
                    "scope": 66090,
                    "src": "2911:14:101",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 66066,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2911:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "2877:49:101"
              },
              "returnParameters": {
                "id": 66071,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "2946:0:101"
              },
              "scope": 66091,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            }
          ],
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 65850,
                "name": "ISeamAirdrop",
                "nameLocations": [
                  "717:12:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67698,
                "src": "717:12:101"
              },
              "id": 65851,
              "nodeType": "InheritanceSpecifier",
              "src": "717:12:101"
            },
            {
              "baseName": {
                "id": 65852,
                "name": "Ownable",
                "nameLocations": [
                  "731:7:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51979,
                "src": "731:7:101"
              },
              "id": 65853,
              "nodeType": "InheritanceSpecifier",
              "src": "731:7:101"
            }
          ],
          "canonicalName": "SeamAirdrop",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 65849,
            "nodeType": "StructuredDocumentation",
            "src": "555:138:101",
            "text": "@title Seam Airdrop\n @notice Airdrop contract that transfers SEAM tokens\n @dev New contract should be deployed for each airdrop"
          },
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            66091,
            51979,
            56520,
            67698
          ],
          "name": "SeamAirdrop",
          "nameLocation": "702:11:101",
          "scope": 66092,
          "usedErrors": [
            51845,
            51850,
            55927,
            56253,
            56258,
            56261,
            58499,
            67633,
            67637,
            67639
          ],
          "usedEvents": [
            51856,
            67643,
            67647,
            67655,
            67663
          ]
        }
      ],
      "license": "UNLICENSED"
    },
    "id": 101
  
}
